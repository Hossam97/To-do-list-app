{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Admin\\\\Desktop\\\\My files\\\\Web development\\\\Projects\\\\todolistapp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\My files\\\\Web development\\\\Projects\\\\todolistapp\\\\src\\\\components\\\\todoitem.jsx\";\nimport React, { useState } from \"react\";\nimport App from \"./App\";\n\nfunction ToDoItem(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDone = _useState2[0],\n      setIsDone = _useState2[1];\n\n  function addLineThrough(event) {\n    setIsDone(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"li\", {\n    style: {\n      textDecoration: isDone ? \"line-through\" : \"none\",\n      cursor: \"pointer\"\n    },\n    onClick: addLineThrough,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 11\n    }\n  }, props.text);\n}\n\nexport default ToDoItem;","map":{"version":3,"sources":["C:/Users/Admin/Desktop/My files/Web development/Projects/todolistapp/src/components/todoitem.jsx"],"names":["React","useState","App","ToDoItem","props","isDone","setIsDone","addLineThrough","event","textDecoration","cursor","text"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpB,kBAA4BH,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOI,MAAP;AAAA,MAAeC,SAAf;;AAEA,WAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BF,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAGF,sBAAO;AAAI,IAAA,KAAK,EAAE;AAACG,MAAAA,cAAc,EAAEJ,MAAM,GAAE,cAAF,GAAkB,MAAzC;AAAiDK,MAAAA,MAAM,EAAC;AAAxD,KAAX;AAA+E,IAAA,OAAO,EAAEH,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyGH,KAAK,CAACO,IAA/G,CAAP;AACF;;AAED,eAAeR,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport App from \"./App\";\r\n\r\nfunction ToDoItem(props){\r\n    const [isDone, setIsDone] = useState(false);\r\n\r\n    function addLineThrough(event){\r\n        setIsDone(true);\r\n    }\r\n\r\n\r\n   return <li style={{textDecoration: isDone? \"line-through\": \"none\" ,cursor:\"pointer\"}} onClick={addLineThrough}>{props.text}</li>\r\n}\r\n\r\nexport default ToDoItem;"]},"metadata":{},"sourceType":"module"}